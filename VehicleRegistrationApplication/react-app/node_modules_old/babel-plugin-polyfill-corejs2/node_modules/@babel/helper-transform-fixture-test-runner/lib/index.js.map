{"version":3,"names":["babel","require","_helperFixtures","_codeFrame","helpers","_sourceMapVisualizer","_assert","_fs","_path","_vm","_lruCache","_url","_jestDiff","_module","_helperCheckDuplicateNodes","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","assert","rejects","block","validateError","Error","EXTERNAL_HELPERS_VERSION","cachedScripts","LruCache","max","contextModuleCache","WeakMap","sharedTestContext","createContext","transformWithoutConfigFile","code","opts","transformSync","Object","assign","configFile","babelrc","transformAsyncWithoutConfigFile","transformAsync","context","vm","process","transform","setTimeout","setImmediate","expect","global","moduleCache","create","set","runCacheableScriptInTestContext","path","join","dirname","__filename","buildExternalHelpers","filename","srcFn","cached","get","cachedData","script","Script","lineOffset","produceCachedData","cachedDataProduced","module","id","exports","req","runModuleInTestContext","runInContext","call","relativeFilename","v","w","split","versions","node","r","paths","b","M","f","_findPath","_nodeModulePaths","concat","fs","readFileSync","runCodeInTestContext","oldCwd","cwd","chdir","src","displayErrors","maybeMockConsole","_x3","_x4","_maybeMockConsole","validateLogs","run","actualLogs","stdout","stderr","result","spy1","jest","spyOn","console","mockImplementation","msg","spy2","mockRestore","_x5","_run","task","actual","expected","exec","options","doNotSetSourceType","optionsDir","ignoreOutput","getOpts","newOpts","ast","loc","filenameRelative","sourceFileName","sourceType","inputSourceMap","resolveOptionPluginOrPreset","execCode","resultExec","execOpts","checkDuplicateNodes","message","codeFrameColumns","inputCode","expectedCode","outputCode","normalizeOutput","throws","statSync","isDirectory","env","CI","expectedFile","replace","log","writeFileSync","unlinkSync","e","validateFile","toMatch","normalizationOpts","normalizePathSeparator","normalizePresetEnvDebug","taskDir","includes","validateSourceMapVisual","visual","visualizeSourceMap","map","toEqual","sourceMapVisual","_task$sourceMapVisual","OVERWRITE","sourceMaps","sourceMap","sourceMapFile","JSON","stringify","actualCode","expectedLoc","diff","expand","escapeRegExp","string","projectRoot","cwdSymbol","trim","RegExp","platform","parseInt","_default","fixturesLoc","name","suiteOpts","taskOpts","dynamicOpts","suites","getFixtures","testSuite","_suiteOpts$ignoreSuit","ignoreSuites","title","describe","tests","_suiteOpts$ignoreTask","_suiteOpts$ignoreTask2","ignoreTasks","testFn","disabled","it","skip","runTask","externalHelpers","_task$options","_task$options$plugins","plugins","push","helperVersion","throwMsg","ok"],"sources":["../src/index.ts"],"sourcesContent":["/* eslint-env jest */\nimport * as babel from \"@babel/core\";\nimport {\n  buildExternalHelpers,\n  type InputOptions,\n  type FileResult,\n} from \"@babel/core\";\nimport {\n  default as getFixtures,\n  resolveOptionPluginOrPreset,\n  type Test,\n  type TestFile,\n  type TaskOptions,\n} from \"@babel/helper-fixtures\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport * as helpers from \"./helpers.ts\";\nimport visualizeSourceMap from \"./source-map-visualizer.ts\";\nimport assert from \"assert\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport vm from \"vm\";\nimport LruCache from \"lru-cache\";\nimport { fileURLToPath } from \"url\";\nimport { diff } from \"jest-diff\";\n\nimport { createRequire } from \"module\";\nconst require = createRequire(import.meta.url);\n\nimport checkDuplicateNodes from \"@babel/helper-check-duplicate-nodes\";\n\ntype Module = {\n  id: string;\n  exports: Record<string, unknown>;\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  // Introduced in Node.js 10\n  if (!assert.rejects) {\n    assert.rejects = async function (block, validateError) {\n      try {\n        await (typeof block === \"function\" ? block() : block);\n        return Promise.reject(new Error(\"Promise not rejected\"));\n      } catch (error) {\n        // @ts-expect-error Fixme: validateError can be a string | object\n        // see https://nodejs.org/api/assert.html#assertrejectsasyncfn-error-message\n        if (typeof validateError === \"function\" && !validateError(error)) {\n          return Promise.reject(\n            new Error(\"Promise rejected with invalid error\"),\n          );\n        }\n      }\n    };\n  }\n}\n\nconst EXTERNAL_HELPERS_VERSION = \"7.100.0\";\n\nconst cachedScripts = new LruCache<\n  string,\n  { code: string; cachedData?: Buffer }\n>({ max: 10 });\nconst contextModuleCache = new WeakMap();\nconst sharedTestContext = createContext();\n\n// We never want our tests to accidentally load the root\n// babel.config.js file, so we disable config loading by\n// default. Tests can still set `configFile: true | string`\n// to re-enable config loading.\nfunction transformWithoutConfigFile(code: string, opts: InputOptions) {\n  return babel.transformSync(code, {\n    configFile: false,\n    babelrc: false,\n    ...opts,\n  });\n}\nfunction transformAsyncWithoutConfigFile(code: string, opts: InputOptions) {\n  return babel.transformAsync(code, {\n    configFile: false,\n    babelrc: false,\n    ...opts,\n  });\n}\n\nfunction createContext() {\n  const context = vm.createContext({\n    ...helpers,\n    process: process,\n    transform: transformWithoutConfigFile,\n    transformAsync: transformAsyncWithoutConfigFile,\n    setTimeout: setTimeout,\n    setImmediate: setImmediate,\n    expect,\n  });\n  context.global = context;\n\n  const moduleCache = Object.create(null);\n  contextModuleCache.set(context, moduleCache);\n\n  // Populate the \"babelHelpers\" global with Babel's helper utilities.\n  runCacheableScriptInTestContext(\n    path.join(\n      path.dirname(fileURLToPath(import.meta.url)),\n      \"babel-helpers-in-memory.js\",\n    ),\n    buildExternalHelpers,\n    context,\n    moduleCache,\n  );\n\n  return context;\n}\n\nfunction runCacheableScriptInTestContext(\n  filename: string,\n  srcFn: () => string,\n  context: vm.Context,\n  moduleCache: any,\n): Module {\n  let cached = cachedScripts.get(filename);\n  if (!cached) {\n    const code = `(function (exports, require, module, __filename, __dirname) {\\n${srcFn()}\\n});`;\n    cached = {\n      code,\n      cachedData: undefined,\n    };\n    cachedScripts.set(filename, cached);\n  }\n\n  let script: vm.Script;\n  if (process.env.BABEL_8_BREAKING) {\n    script = new vm.Script(cached.code, {\n      filename,\n      lineOffset: -1,\n      cachedData: cached.cachedData,\n    });\n    cached.cachedData = script.createCachedData();\n  } else {\n    script = new vm.Script(cached.code, {\n      filename,\n      lineOffset: -1,\n      cachedData: cached.cachedData,\n      produceCachedData: true,\n    });\n    if (script.cachedDataProduced) {\n      cached.cachedData = script.cachedData;\n    }\n  }\n\n  const module = {\n    id: filename,\n    exports: {},\n  };\n  moduleCache[filename] = module;\n\n  const req = (id: string) =>\n    runModuleInTestContext(id, filename, context, moduleCache);\n  const dirname = path.dirname(filename);\n\n  script\n    .runInContext(context)\n    .call(module.exports, module.exports, req, module, filename, dirname);\n\n  return module;\n}\n\n/**\n * A basic implementation of CommonJS so we can execute `@babel/polyfill` inside our test context.\n * This allows us to run our unittests\n */\nfunction runModuleInTestContext(\n  id: string,\n  relativeFilename: string,\n  context: vm.Context,\n  moduleCache: any,\n) {\n  const filename = require.resolve(id, {\n    paths: [path.dirname(relativeFilename)],\n  });\n\n  // Expose Node-internal modules if the tests want them. Note, this will not execute inside\n  // the context's global scope.\n  if (filename === id) return require(id);\n\n  // Modules can only evaluate once per context, so the moduleCache is a\n  // stronger cache guarantee than the LRU's Script cache.\n  if (moduleCache[filename]) return moduleCache[filename].exports;\n\n  return runCacheableScriptInTestContext(\n    filename,\n    () => fs.readFileSync(filename, \"utf8\"),\n    context,\n    moduleCache,\n  ).exports;\n}\n\n/**\n * Run the given snippet of code inside a CommonJS module.\n *\n * Exposed for unit tests, not for use as an API.\n */\nexport function runCodeInTestContext(\n  code: string,\n  opts: {\n    filename: string;\n  },\n  context = sharedTestContext,\n) {\n  const filename = opts.filename;\n  const dirname = path.dirname(filename);\n  const moduleCache = contextModuleCache.get(context);\n  const req = (id: string) =>\n    runModuleInTestContext(id, filename, context, moduleCache);\n\n  const module: Module = {\n    id: filename,\n    exports: {},\n  };\n\n  const oldCwd = process.cwd();\n  try {\n    if (opts.filename) process.chdir(path.dirname(opts.filename));\n\n    // Expose the test options as \"opts\", but otherwise run the test in a CommonJS-like environment.\n    // Note: This isn't doing .call(module.exports, ...) because some of our tests currently\n    // rely on 'this === global'.\n    const src = `(function(exports, require, module, __filename, __dirname, opts) {\\n${code}\\n});`;\n    return vm.runInContext(src, context, {\n      filename,\n      displayErrors: true,\n      lineOffset: -1,\n    })(module.exports, req, module, filename, dirname, opts);\n  } finally {\n    process.chdir(oldCwd);\n  }\n}\n\nasync function maybeMockConsole<R>(\n  validateLogs: boolean,\n  run: () => Promise<R>,\n) {\n  const actualLogs = { stdout: \"\", stderr: \"\" };\n\n  if (!validateLogs) return { result: await run(), actualLogs };\n\n  const spy1 = jest.spyOn(console, \"log\").mockImplementation(msg => {\n    actualLogs.stdout += `${msg}\\n`;\n  });\n  const spy2 = jest.spyOn(console, \"warn\").mockImplementation(msg => {\n    actualLogs.stderr += `${msg}\\n`;\n  });\n\n  try {\n    return { result: await run(), actualLogs };\n  } finally {\n    spy1.mockRestore();\n    spy2.mockRestore();\n  }\n}\n\nasync function run(task: Test) {\n  const {\n    actual,\n    expect: expected,\n    exec,\n    options: opts,\n    doNotSetSourceType,\n    optionsDir,\n    validateLogs,\n    ignoreOutput,\n    stdout,\n    stderr,\n  } = task;\n\n  // todo(flow->ts) add proper return type (added any, because empty object is inferred)\n  function getOpts(self: TestFile): any {\n    const newOpts = {\n      ast: true,\n      cwd: path.dirname(self.loc),\n      filename: self.loc,\n      filenameRelative: self.filename,\n      sourceFileName: self.filename,\n      ...(doNotSetSourceType ? {} : { sourceType: \"script\" }),\n      babelrc: false,\n      configFile: false,\n      inputSourceMap: task.inputSourceMap || undefined,\n      ...opts,\n    };\n\n    return resolveOptionPluginOrPreset(newOpts, optionsDir);\n  }\n\n  let execCode = exec.code;\n  let result: FileResult;\n  let resultExec;\n\n  if (execCode) {\n    const context = createContext();\n    const execOpts = getOpts(exec);\n\n    // Ignore Babel logs of exec.js files.\n    // They will be validated in input/output files.\n    ({ result } = await maybeMockConsole(validateLogs, () =>\n      babel.transformAsync(execCode, execOpts),\n    ));\n\n    checkDuplicateNodes(result.ast);\n    execCode = result.code;\n\n    try {\n      resultExec = runCodeInTestContext(execCode, execOpts, context);\n    } catch (err) {\n      // Pass empty location to include the whole file in the output.\n      err.message =\n        `${exec.loc}: ${err.message}\\n` + codeFrameColumns(execCode, {} as any);\n      throw err;\n    }\n  }\n\n  const inputCode = actual.code;\n  const expectedCode = expected.code;\n  if (!execCode || inputCode) {\n    let actualLogs;\n\n    ({ result, actualLogs } = await maybeMockConsole(validateLogs, () =>\n      babel.transformAsync(inputCode, getOpts(actual)),\n    ));\n\n    const outputCode = normalizeOutput(result.code);\n\n    checkDuplicateNodes(result.ast);\n    if (!ignoreOutput) {\n      if (\n        !expected.code &&\n        outputCode &&\n        !opts.throws &&\n        fs.statSync(path.dirname(expected.loc)).isDirectory() &&\n        !process.env.CI\n      ) {\n        const expectedFile = expected.loc.replace(\n          /\\.m?js$/,\n          result.sourceType === \"module\" ? \".mjs\" : \".js\",\n        );\n\n        console.log(`New test file created: ${expectedFile}`);\n        fs.writeFileSync(expectedFile, `${outputCode}\\n`);\n\n        if (expected.loc !== expectedFile) {\n          try {\n            fs.unlinkSync(expected.loc);\n          } catch (e) {}\n        }\n      } else {\n        validateFile(outputCode, expected.loc, expectedCode);\n\n        if (inputCode) {\n          expect(expected.loc).toMatch(\n            result.sourceType === \"module\" ? /\\.mjs$/ : /\\.js$/,\n          );\n        }\n      }\n    }\n\n    if (validateLogs) {\n      const normalizationOpts = {\n        normalizePathSeparator: true,\n        normalizePresetEnvDebug: task.taskDir.includes(\"babel-preset-env\"),\n      };\n\n      validateFile(\n        normalizeOutput(actualLogs.stdout, normalizationOpts),\n        stdout.loc,\n        process.env.BABEL_8_BREAKING\n          ? // In Babel 8, preset-env does not enable all the unnecessary syntax\n            // plugins. For simplicity, just strip them fro the expected output\n            // so that we do not need to separate tests for every fixture.\n            stdout.code.replace(\n              /\\n\\s*syntax-(?!import-attributes|import-assertions).*/g,\n              \"\",\n            )\n          : stdout.code,\n      );\n      validateFile(\n        normalizeOutput(actualLogs.stderr, normalizationOpts),\n        stderr.loc,\n        stderr.code,\n      );\n    }\n  }\n\n  if (task.validateSourceMapVisual === true) {\n    const visual = visualizeSourceMap(result.code, result.map);\n    try {\n      expect(visual).toEqual(task.sourceMapVisual.code);\n    } catch (e) {\n      if (!process.env.OVERWRITE && task.sourceMapVisual.code) throw e;\n\n      console.log(`Updated test file: ${task.sourceMapVisual.loc}`);\n      fs.writeFileSync(\n        task.sourceMapVisual.loc ?? task.taskDir + \"/source-map-visual.txt\",\n        visual + \"\\n\",\n      );\n    }\n  }\n\n  if (opts.sourceMaps === true) {\n    try {\n      expect(result.map).toEqual(task.sourceMap);\n    } catch (e) {\n      if (!process.env.OVERWRITE && task.sourceMap) throw e;\n\n      console.log(`Updated test file: ${task.sourceMapFile.loc}`);\n      fs.writeFileSync(\n        task.sourceMapFile.loc,\n        JSON.stringify(result.map, null, 2),\n      );\n    }\n  }\n\n  if (execCode && resultExec) {\n    return resultExec;\n  }\n}\n\nfunction validateFile(\n  actualCode: string,\n  expectedLoc: string,\n  expectedCode: string,\n) {\n  if (actualCode !== expectedCode) {\n    if (process.env.OVERWRITE) {\n      console.log(`Updated test file: ${expectedLoc}`);\n      fs.writeFileSync(expectedLoc, `${actualCode}\\n`);\n      return;\n    }\n\n    throw new Error(\n      `Expected ${expectedLoc} to match transform output.\\n` +\n        `To autogenerate a passing version of this file, delete ` +\n        ` the file and re-run the tests.\\n\\n` +\n        `Diff:\\n\\n${diff(expectedCode, actualCode, { expand: false })}`,\n    );\n  }\n}\n\nfunction escapeRegExp(string: string) {\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n}\n\nfunction normalizeOutput(\n  code: string,\n  { normalizePathSeparator = false, normalizePresetEnvDebug = false } = {},\n) {\n  const projectRoot = path.resolve(\n    path.dirname(fileURLToPath(import.meta.url)),\n    \"../../../\",\n  );\n  const cwdSymbol = \"<CWD>\";\n  let result = code\n    .trim()\n    // (non-win32) /foo/babel/packages -> <CWD>/packages\n    // (win32) C:\\foo\\babel\\packages -> <CWD>\\packages\n    .replace(new RegExp(escapeRegExp(projectRoot), \"g\"), cwdSymbol);\n  if (process.platform === \"win32\") {\n    result = result\n      // C:/foo/babel/packages -> <CWD>/packages\n      .replace(\n        new RegExp(escapeRegExp(projectRoot.replace(/\\\\/g, \"/\")), \"g\"),\n        cwdSymbol,\n      )\n      // C:\\\\foo\\\\babel\\\\packages -> <CWD>\\\\packages (in js string literal)\n      .replace(\n        new RegExp(escapeRegExp(projectRoot.replace(/\\\\/g, \"\\\\\\\\\")), \"g\"),\n        cwdSymbol,\n      );\n    if (normalizePathSeparator) {\n      result = result.replace(/<CWD>[\\w\\\\/.-]+/g, path =>\n        path.replace(/\\\\\\\\?/g, \"/\"),\n      );\n    }\n  }\n\n  if (!process.env.BABEL_8_BREAKING) {\n    // In Babel 8, preset-env logs transform- instead of proposal-. Manually rewrite\n    // the output logs so that we don't have to duplicate all the debug fixtures for\n    // the two different Babel versions.\n    if (normalizePresetEnvDebug) {\n      result = result.replace(/(\\s+)proposal-/gm, \"$1transform-\");\n    }\n\n    // For some reasons, in older Node.js versions some symlinks are not properly\n    // resolved. The behavior is still ok, but we need to unify the output with\n    // newer Node.js versions.\n    if (parseInt(process.versions.node, 10) <= 8) {\n      result = result.replace(\n        /<CWD>\\/node_modules\\/@babel\\/runtime-corejs3/g,\n        \"<CWD>/packages/babel-runtime-corejs3\",\n      );\n    }\n  }\n\n  return result;\n}\n\nexport type SuiteOptions = {\n  ignoreSuites?: string[];\n  ignoreTasks?: string[];\n};\n\nexport default function (\n  fixturesLoc: string,\n  name: string,\n  suiteOpts: SuiteOptions = {},\n  taskOpts: TaskOptions = {},\n  dynamicOpts?: (options: TaskOptions, task: Test) => void,\n) {\n  const suites = getFixtures(fixturesLoc);\n\n  for (const testSuite of suites) {\n    if (suiteOpts.ignoreSuites?.includes(testSuite.title)) continue;\n\n    describe(name + \"/\" + testSuite.title, function () {\n      for (const task of testSuite.tests) {\n        if (\n          suiteOpts.ignoreTasks?.includes(task.title) ||\n          suiteOpts.ignoreTasks?.includes(testSuite.title + \"/\" + task.title)\n        ) {\n          continue;\n        }\n\n        const testFn = task.disabled ? it.skip : it;\n\n        testFn(\n          task.title,\n\n          async function () {\n            const runTask = () => run(task);\n\n            if (\"sourceMap\" in task.options) {\n              throw new Error(\n                \"`sourceMap` option is deprecated. Use `sourceMaps` instead.\",\n              );\n            }\n\n            if (\"sourceMaps\" in task.options === false) {\n              task.options.sourceMaps = !!task.sourceMap;\n            }\n\n            Object.assign(task.options, taskOpts);\n\n            if (dynamicOpts) dynamicOpts(task.options, task);\n\n            if (task.externalHelpers) {\n              (task.options.plugins ??= [])\n                // @ts-expect-error manipulating input options\n                .push([\n                  \"external-helpers\",\n                  { helperVersion: EXTERNAL_HELPERS_VERSION },\n                ]);\n            }\n\n            const throwMsg = task.options.throws;\n            if (throwMsg) {\n              // internal api doesn't have this option but it's best not to pollute\n              // the options object with useless options\n              delete task.options.throws;\n\n              await assert.rejects(runTask, function (err: Error) {\n                assert.ok(\n                  throwMsg === true || err.message.includes(throwMsg),\n                  `\nExpected Error: ${throwMsg}\nActual Error: ${err.message}`,\n                );\n                return true;\n              });\n            } else {\n              return runTask();\n            }\n          },\n        );\n      }\n    });\n  }\n}\n"],"mappings":"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"}